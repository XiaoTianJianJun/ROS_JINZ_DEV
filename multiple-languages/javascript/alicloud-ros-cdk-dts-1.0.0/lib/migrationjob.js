"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.MigrationJob = exports.MigrationJobProperty = void 0;
const ros = require("@alicloud/ros-cdk-core");
const dts_generated_1 = require("./dts.generated");
Object.defineProperty(exports, "MigrationJobProperty", { enumerable: true, get: function () { return dts_generated_1.RosMigrationJob; } });
/**
 * A ROS resource type:  `ALIYUN::DTS::MigrationJob`
 */
class MigrationJob extends ros.Resource {
    /**
     * Create a new `ALIYUN::DTS::MigrationJob`.
     *
     * @param scope - scope in which this resource is defined
     * @param id    - scoped id of the resource
     * @param props - resource properties
     */
    constructor(scope, id, props, enableResourcePropertyConstraint = true) {
        super(scope, id);
        const rosMigrationJob = new dts_generated_1.RosMigrationJob(this, id, {
            migrationObject: props.migrationObject,
            destinationEndpoint: props.destinationEndpoint,
            migrationJobClass: props.migrationJobClass,
            sourceEndpoint: props.sourceEndpoint,
            migrationJobName: props.migrationJobName,
            migrationMode: props.migrationMode,
        }, enableResourcePropertyConstraint && this.stack.enableResourcePropertyConstraint);
        this.resource = rosMigrationJob;
        this.attrMigrationJobId = rosMigrationJob.attrMigrationJobId;
    }
}
exports.MigrationJob = MigrationJob;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWlncmF0aW9uam9iLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsibWlncmF0aW9uam9iLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUFBLDhDQUE4QztBQUM5QyxtREFBa0Q7QUFFdEIscUdBRm5CLCtCQUFlLE9BRXdCO0FBd0NoRDs7R0FFRztBQUNILE1BQWEsWUFBYSxTQUFRLEdBQUcsQ0FBQyxRQUFRO0lBWTFDOzs7Ozs7T0FNRztJQUNILFlBQVksS0FBb0IsRUFBRSxFQUFVLEVBQUUsS0FBd0IsRUFBRSxtQ0FBMkMsSUFBSTtRQUNuSCxLQUFLLENBQUMsS0FBSyxFQUFFLEVBQUUsQ0FBQyxDQUFDO1FBRWpCLE1BQU0sZUFBZSxHQUFHLElBQUksK0JBQWUsQ0FBQyxJQUFJLEVBQUUsRUFBRSxFQUFHO1lBQ25ELGVBQWUsRUFBRSxLQUFLLENBQUMsZUFBZTtZQUN0QyxtQkFBbUIsRUFBRSxLQUFLLENBQUMsbUJBQW1CO1lBQzlDLGlCQUFpQixFQUFFLEtBQUssQ0FBQyxpQkFBaUI7WUFDMUMsY0FBYyxFQUFFLEtBQUssQ0FBQyxjQUFjO1lBQ3BDLGdCQUFnQixFQUFFLEtBQUssQ0FBQyxnQkFBZ0I7WUFDeEMsYUFBYSxFQUFFLEtBQUssQ0FBQyxhQUFhO1NBQ3JDLEVBQUUsZ0NBQWdDLElBQUksSUFBSSxDQUFDLEtBQUssQ0FBQyxnQ0FBZ0MsQ0FBQyxDQUFDO1FBQ3BGLElBQUksQ0FBQyxRQUFRLEdBQUcsZUFBZSxDQUFDO1FBQ2hDLElBQUksQ0FBQyxrQkFBa0IsR0FBRyxlQUFlLENBQUMsa0JBQWtCLENBQUM7SUFDakUsQ0FBQztDQUNKO0FBakNELG9DQWlDQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIHJvcyBmcm9tICdAYWxpY2xvdWQvcm9zLWNkay1jb3JlJztcbmltcG9ydCB7IFJvc01pZ3JhdGlvbkpvYiB9IGZyb20gJy4vZHRzLmdlbmVyYXRlZCc7XG4vLyBHZW5lcmF0ZWQgZnJvbSB0aGUgQWxpQ2xvdWQgUk9TIFJlc291cmNlIFNwZWNpZmljYXRpb25cbmV4cG9ydCB7IFJvc01pZ3JhdGlvbkpvYiBhcyBNaWdyYXRpb25Kb2JQcm9wZXJ0eSB9O1xuXG4vKipcbiAqIFByb3BlcnRpZXMgZm9yIGRlZmluaW5nIGEgYEFMSVlVTjo6RFRTOjpNaWdyYXRpb25Kb2JgXG4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgTWlncmF0aW9uSm9iUHJvcHMge1xuXG4gICAgLyoqXG4gICAgICogQFByb3BlcnR5IG1pZ3JhdGlvbkpvYkNsYXNzOiBNaWdyYXRpbmcgaW5zdGFuY2Ugc3BlY2lmaWNhdGlvbnMsIHdoaWNoIGNhbiBiZTpcbiAgICAgKiBzbWFsbCwgbWVkaXVtLCBsYXJnZSBhbmQgc28gb24uXG4gICAgICogVmFyaW91cyBzcGVjaWZpY2F0aW9ucyBvZiB0aGUgcmVmZXJlbmNlIGRhdGEgbWlncmF0aW9uIHRlc3QgcGVyZm9ybWFuY2Ugc3BlY2lmaWNhdGlvbnNcbiAgICAgKi9cbiAgICByZWFkb25seSBtaWdyYXRpb25Kb2JDbGFzczogc3RyaW5nO1xuXG4gICAgLyoqXG4gICAgICogQFByb3BlcnR5IGRlc3RpbmF0aW9uRW5kcG9pbnQ6IE1pZ3JhdGlvbiB0YXJnZXQgY29uZmlndXJhdGlvblxuICAgICAqL1xuICAgIHJlYWRvbmx5IGRlc3RpbmF0aW9uRW5kcG9pbnQ/OiBSb3NNaWdyYXRpb25Kb2IuRGVzdGluYXRpb25FbmRwb2ludFByb3BlcnR5IHwgcm9zLklSZXNvbHZhYmxlO1xuXG4gICAgLyoqXG4gICAgICogQFByb3BlcnR5IG1pZ3JhdGlvbkpvYk5hbWU6IE1pZ3JhdGluZyBqb2IgbmFtZVxuICAgICAqL1xuICAgIHJlYWRvbmx5IG1pZ3JhdGlvbkpvYk5hbWU/OiBzdHJpbmc7XG5cbiAgICAvKipcbiAgICAgKiBAUHJvcGVydHkgbWlncmF0aW9uTW9kZTogTWlncmF0aW9uIG1vZGVcbiAgICAgKi9cbiAgICByZWFkb25seSBtaWdyYXRpb25Nb2RlPzogUm9zTWlncmF0aW9uSm9iLk1pZ3JhdGlvbk1vZGVQcm9wZXJ0eSB8IHJvcy5JUmVzb2x2YWJsZTtcblxuICAgIC8qKlxuICAgICAqIEBQcm9wZXJ0eSBtaWdyYXRpb25PYmplY3Q6IE9iamVjdHMgdGhhdCBuZWVkIHRvIGJlIG1pZ3JhdGVkXG4gICAgICovXG4gICAgcmVhZG9ubHkgbWlncmF0aW9uT2JqZWN0PzogQXJyYXk8Um9zTWlncmF0aW9uSm9iLk1pZ3JhdGlvbk9iamVjdFByb3BlcnR5IHwgcm9zLklSZXNvbHZhYmxlPiB8IHJvcy5JUmVzb2x2YWJsZTtcblxuICAgIC8qKlxuICAgICAqIEBQcm9wZXJ0eSBzb3VyY2VFbmRwb2ludDogTWlncmF0aW9uIHNvdXJjZSBjb25maWd1cmF0aW9uXG4gICAgICovXG4gICAgcmVhZG9ubHkgc291cmNlRW5kcG9pbnQ/OiBSb3NNaWdyYXRpb25Kb2IuU291cmNlRW5kcG9pbnRQcm9wZXJ0eSB8IHJvcy5JUmVzb2x2YWJsZTtcbn1cblxuLyoqXG4gKiBBIFJPUyByZXNvdXJjZSB0eXBlOiAgYEFMSVlVTjo6RFRTOjpNaWdyYXRpb25Kb2JgXG4gKi9cbmV4cG9ydCBjbGFzcyBNaWdyYXRpb25Kb2IgZXh0ZW5kcyByb3MuUmVzb3VyY2Uge1xuXG4gICAgLyoqXG4gICAgICogQSBmYWN0b3J5IG1ldGhvZCB0aGF0IGNyZWF0ZXMgYSBuZXcgaW5zdGFuY2Ugb2YgdGhpcyBjbGFzcyBmcm9tIGFuIG9iamVjdFxuICAgICAqIGNvbnRhaW5pbmcgdGhlIHByb3BlcnRpZXMgb2YgdGhpcyBST1MgcmVzb3VyY2UsIHdoaWNoIHdpbGwgYmUgYXNzaWduZWQgdG8gUk9TIHJlc291cmNlLlxuICAgICAqL1xuXG4gICAgLyoqXG4gICAgICogQEF0dHJpYnV0ZSBNaWdyYXRpb25Kb2JJZDogTWlncmF0aW9uIHRhc2tzIHRhc2sgSURcbiAgICAgKi9cbiAgICBwdWJsaWMgcmVhZG9ubHkgYXR0ck1pZ3JhdGlvbkpvYklkOiBhbnk7XG5cbiAgICAvKipcbiAgICAgKiBDcmVhdGUgYSBuZXcgYEFMSVlVTjo6RFRTOjpNaWdyYXRpb25Kb2JgLlxuICAgICAqXG4gICAgICogQHBhcmFtIHNjb3BlIC0gc2NvcGUgaW4gd2hpY2ggdGhpcyByZXNvdXJjZSBpcyBkZWZpbmVkXG4gICAgICogQHBhcmFtIGlkICAgIC0gc2NvcGVkIGlkIG9mIHRoZSByZXNvdXJjZVxuICAgICAqIEBwYXJhbSBwcm9wcyAtIHJlc291cmNlIHByb3BlcnRpZXNcbiAgICAgKi9cbiAgICBjb25zdHJ1Y3RvcihzY29wZTogcm9zLkNvbnN0cnVjdCwgaWQ6IHN0cmluZywgcHJvcHM6IE1pZ3JhdGlvbkpvYlByb3BzLCBlbmFibGVSZXNvdXJjZVByb3BlcnR5Q29uc3RyYWludDpib29sZWFuID0gdHJ1ZSkge1xuICAgICAgICBzdXBlcihzY29wZSwgaWQpO1xuXG4gICAgICAgIGNvbnN0IHJvc01pZ3JhdGlvbkpvYiA9IG5ldyBSb3NNaWdyYXRpb25Kb2IodGhpcywgaWQsICB7XG4gICAgICAgICAgICBtaWdyYXRpb25PYmplY3Q6IHByb3BzLm1pZ3JhdGlvbk9iamVjdCxcbiAgICAgICAgICAgIGRlc3RpbmF0aW9uRW5kcG9pbnQ6IHByb3BzLmRlc3RpbmF0aW9uRW5kcG9pbnQsXG4gICAgICAgICAgICBtaWdyYXRpb25Kb2JDbGFzczogcHJvcHMubWlncmF0aW9uSm9iQ2xhc3MsXG4gICAgICAgICAgICBzb3VyY2VFbmRwb2ludDogcHJvcHMuc291cmNlRW5kcG9pbnQsXG4gICAgICAgICAgICBtaWdyYXRpb25Kb2JOYW1lOiBwcm9wcy5taWdyYXRpb25Kb2JOYW1lLFxuICAgICAgICAgICAgbWlncmF0aW9uTW9kZTogcHJvcHMubWlncmF0aW9uTW9kZSxcbiAgICAgICAgfSwgZW5hYmxlUmVzb3VyY2VQcm9wZXJ0eUNvbnN0cmFpbnQgJiYgdGhpcy5zdGFjay5lbmFibGVSZXNvdXJjZVByb3BlcnR5Q29uc3RyYWludCk7XG4gICAgICAgIHRoaXMucmVzb3VyY2UgPSByb3NNaWdyYXRpb25Kb2I7XG4gICAgICAgIHRoaXMuYXR0ck1pZ3JhdGlvbkpvYklkID0gcm9zTWlncmF0aW9uSm9iLmF0dHJNaWdyYXRpb25Kb2JJZDtcbiAgICB9XG59XG4iXX0=